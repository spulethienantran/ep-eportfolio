{"version":3,"file":"static/js/357.1c9aafc0.chunk.js","mappings":"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","sources":["Pages/PostProjectPage/PostProjectPage.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./PostProjectPage.css\";\r\nimport axios from \"axios\";\r\nimport StandardDropDown from \"../../Components/DropDowns/StandardDropDown/StandardDropDown\";\r\nimport { API } from \"../../Constants\";\r\nimport NavBar from \"../../Components/NavBar/NavBar\";\r\nimport IconButton from \"../../Components/Buttons/IconButton/IconButton\";\r\nimport { faImage } from \"@fortawesome/free-regular-svg-icons\";\r\nimport StandardButton from \"../../Components/Buttons/StandardButton/StandardButton\";\r\nimport StandardTextInputField from \"../../Components/InputFields/StandardTextInputField\";\r\nimport StandardTextAreaInputField from \"../../Components/InputFields/StandardTextAreaInputField/StandardTextAreaInputField\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction PostProjectPage({ userData }) {\r\n  const navigate = useNavigate();\r\n\r\n  const fileInputRef = useRef(null);\r\n  const [imageBase64, setImageBase64] = useState(null); // State to store the base64 image data\r\n  const [imageOGWidth, setImageOGWidth] = useState(null);\r\n  const [imageOGHeight, setImageOGHeight] = useState(null);\r\n  const [selectedCollaborators, setSelectedCollaborators] = useState(null);\r\n\r\n  const maxWidth = 240;\r\n  const maxHeight = 240;\r\n\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [projectInformation, setProjectInformation] = useState({\r\n    projectTitle: \"\",\r\n    collaborators: [],\r\n    projectDescription: \"\",\r\n  });\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (event) => {\r\n        const img = new Image();\r\n        img.src = event.target.result;\r\n\r\n        img.onload = () => {\r\n          const canvas = document.createElement(\"canvas\");\r\n          let newWidth = img.width;\r\n          let newHeight = img.height;\r\n\r\n          if (img.width > maxWidth || img.height > maxHeight) {\r\n            if (img.width / maxWidth > img.height / maxHeight) {\r\n              newWidth = maxWidth;\r\n              newHeight = (img.height / img.width) * maxWidth;\r\n            } else {\r\n              newHeight = maxHeight;\r\n              newWidth = (img.width / img.height) * maxHeight;\r\n            }\r\n          }\r\n          setImageOGHeight(img.height);\r\n          setImageOGWidth(img.width);\r\n          canvas.width = newWidth;\r\n          canvas.height = newHeight;\r\n\r\n          const ctx = canvas.getContext(\"2d\");\r\n          ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n\r\n          const base64Data = canvas.toDataURL(\"image/jpeg\", 0.7); // Use 'image/jpeg' for JPEG format\r\n          setImageBase64(base64Data);\r\n        };\r\n      };\r\n\r\n      reader.readAsDataURL(selectedFile);\r\n    }\r\n  };\r\n  const handleCollaboratorsChange = (selectedOptions) => {\r\n    const collaboratorValues = selectedOptions.map((option) => option.value);\r\n    setProjectInformation({\r\n      ...projectInformation,\r\n      collaborators: collaboratorValues,\r\n    });\r\n  };\r\n\r\n  const openFileDialog = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const NavigateProfile = (userId) => {\r\n    navigate(\"/Profile\", { state: { userId } });\r\n  };\r\n\r\n  const handlePostButtonClick = () => {\r\n    // Prepare the request body\r\n    const requestBody = {\r\n      projectTitle: projectInformation.projectTitle,\r\n      encodePhoto: imageBase64,\r\n      photoOGHeight: imageOGHeight,\r\n      photoOGWidth: imageOGWidth,\r\n      projectOwnerId: userData.userId, // Set the correct owner ID\r\n      projectCollaborators: projectInformation.collaborators, // Set the correct collaborators array\r\n      projectDescription: projectInformation.projectDescription,\r\n    };\r\n    console.log(requestBody);\r\n    // Make the API POST request using Axios\r\n    axios\r\n      .post(\"/api/project/upload\", requestBody, {\r\n        headers: {\r\n          \"X-API-KEY\": API.key,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // Handle the response from the API, e.g., show a success message or perform further actions\r\n        console.log(requestBody);\r\n        NavigateProfile(userData?.userId);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        setErrorMessage(error.response.data.message);\r\n        console.error(\"API request error:\", error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const HandleInputChange = (propertyName, inputValue) => {\r\n    if (isError) {\r\n      setIsError(false);\r\n    }\r\n    setProjectInformation({\r\n      ...projectInformation,\r\n      [propertyName]: inputValue,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper PostProjectPage-Wrapper\">\r\n      <NavBar />\r\n      <div className=\"PostProjectPage-ContentContainer\">\r\n        <div className=\"PostProjectPage-Content\">\r\n          <p className=\"heading-1 PostProjectPage-Title\">Post Your Project</p>\r\n          <div className=\"PostProjectPage-UploadPhotoContainer\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInputRef}\r\n              onChange={handleFileInputChange}\r\n            />\r\n            {imageBase64 === null ? (\r\n              <IconButton\r\n                icon={faImage}\r\n                className=\"PostProjectPage-UploadPhoto\"\r\n                onClick={openFileDialog}\r\n              />\r\n            ) : (\r\n              <div\r\n                className=\"PostProjectPage-UploadPhotoContainer\"\r\n                onClick={openFileDialog}\r\n              >\r\n                <img\r\n                  src={imageBase64}\r\n                  className=\"PostProjectPage-UploadedPhoto\"\r\n                  alt=\"Uploaded Project Banner\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          {isError && (\r\n            <>\r\n              <p className=\"paragraph-2 PostProjectPage-ErrorMessage\">\r\n                {errorMessage}\r\n              </p>\r\n            </>\r\n          )}\r\n          <div className=\"PostProjectPage-Form\">\r\n            <StandardTextInputField\r\n              placeholder=\"Project Title\"\r\n              onChange={HandleInputChange}\r\n              name=\"projectTitle\"\r\n            />\r\n            <StandardDropDown\r\n              placeholder=\"Add Collaborators\"\r\n              isMulti={true}\r\n              name=\"collaborators\"\r\n              isCollaboratorDropdown={true}\r\n              onCollaboratorsChange={handleCollaboratorsChange}\r\n            />\r\n            <StandardTextAreaInputField\r\n              placeholder=\"Project Description\"\r\n              onChange={HandleInputChange}\r\n              name=\"projectDescription\"\r\n            />\r\n          </div>\r\n          <StandardButton title=\"Post\" onClick={handlePostButtonClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userData: state.user.userData,\r\n});\r\nexport default connect(mapStateToProps)(PostProjectPage);\r\n"],"names":["connect","state","userData","user","_ref","navigate","useNavigate","fileInputRef","useRef","_useState","useState","_useState2","_slicedToArray","imageBase64","setImageBase64","_useState3","_useState4","imageOGWidth","setImageOGWidth","_useState5","_useState6","imageOGHeight","setImageOGHeight","_useState7","_useState8","maxWidth","maxHeight","_useState9","_useState10","isError","setIsError","_useState11","_useState12","errorMessage","setErrorMessage","_useState13","projectTitle","collaborators","projectDescription","_useState14","projectInformation","setProjectInformation","openFileDialog","current","click","HandleInputChange","propertyName","inputValue","_objectSpread","_defineProperty","_jsxs","className","children","_jsx","NavBar","type","accept","style","display","ref","onChange","e","selectedFile","target","files","reader","FileReader","onload","event","img","Image","src","result","canvas","document","createElement","newWidth","width","newHeight","height","getContext","drawImage","base64Data","toDataURL","readAsDataURL","IconButton","icon","faImage","onClick","alt","_Fragment","StandardTextInputField","placeholder","name","StandardDropDown","isMulti","isCollaboratorDropdown","onCollaboratorsChange","selectedOptions","collaboratorValues","map","option","value","StandardTextAreaInputField","StandardButton","title","requestBody","encodePhoto","photoOGHeight","photoOGWidth","projectOwnerId","userId","projectCollaborators","console","log","axios","post","headers","API","key","then","response","catch","error","data","message"],"sourceRoot":""}